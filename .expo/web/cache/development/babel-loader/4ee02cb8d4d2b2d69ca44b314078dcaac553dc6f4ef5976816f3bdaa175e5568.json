{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ReactNativeBlobUtil from 'react-native-blob-util';\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\nvar SHA1 = require('crypto-js/sha1');\nimport PdfView from \"./PdfView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Pdf = function (_Component) {\n  _inherits(Pdf, _Component);\n  var _super = _createSuper(Pdf);\n  function Pdf(props) {\n    var _this;\n    _classCallCheck(this, Pdf);\n    _this = _super.call(this, props);\n    _this._loadFromSource = function (newSource) {\n      var source = Image.resolveAssetSource(newSource) || {};\n      var uri = source.uri || '';\n      if (_this._mounted) {\n        _this.setState({\n          isDownloaded: false,\n          path: '',\n          progress: 0\n        });\n      }\n      var filename = source.cacheFileName || SHA1(uri) + '.pdf';\n      var cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n      if (source.cache) {\n        ReactNativeBlobUtil.fs.stat(cacheFile).then(function (stats) {\n          if (!Boolean(source.expiration) || source.expiration * 1000 + stats.lastModified > new Date().getTime()) {\n            if (_this._mounted) {\n              _this.setState({\n                path: cacheFile,\n                isDownloaded: true\n              });\n            }\n          } else {\n            _this._prepareFile(source);\n          }\n        }).catch(function () {\n          _this._prepareFile(source);\n        });\n      } else {\n        _this._prepareFile(source);\n      }\n    };\n    _this._prepareFile = function () {\n      var _ref = _asyncToGenerator(function* (source) {\n        try {\n          if (source.uri) {\n            var uri = source.uri || '';\n            var isNetwork = !!(uri && uri.match(/^https?:\\/\\//));\n            var isAsset = !!(uri && uri.match(/^bundle-assets:\\/\\//));\n            var isBase64 = !!(uri && uri.match(/^data:application\\/pdf;base64/));\n            var filename = source.cacheFileName || SHA1(uri) + '.pdf';\n            var cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n            _this._unlinkFile(cacheFile);\n            if (isNetwork) {\n              _this._downloadFile(source, cacheFile);\n            } else if (isAsset) {\n              ReactNativeBlobUtil.fs.cp(uri, cacheFile).then(function () {\n                if (_this._mounted) {\n                  _this.setState({\n                    path: cacheFile,\n                    isDownloaded: true,\n                    progress: 1\n                  });\n                }\n              }).catch(function () {\n                var _ref2 = _asyncToGenerator(function* (error) {\n                  _this._unlinkFile(cacheFile);\n                  _this._onError(error);\n                });\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            } else if (isBase64) {\n              var data = uri.replace(/data:application\\/pdf;base64,/i, '');\n              ReactNativeBlobUtil.fs.writeFile(cacheFile, data, 'base64').then(function () {\n                if (_this._mounted) {\n                  _this.setState({\n                    path: cacheFile,\n                    isDownloaded: true,\n                    progress: 1\n                  });\n                }\n              }).catch(function () {\n                var _ref3 = _asyncToGenerator(function* (error) {\n                  _this._unlinkFile(cacheFile);\n                  _this._onError(error);\n                });\n                return function (_x3) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            } else {\n              if (_this._mounted) {\n                _this.setState({\n                  path: uri.replace(/file:\\/\\//i, ''),\n                  isDownloaded: true\n                });\n              }\n            }\n          } else {\n            _this._onError(new Error('no pdf source!'));\n          }\n        } catch (e) {\n          _this._onError(e);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this._downloadFile = function () {\n      var _ref4 = _asyncToGenerator(function* (source, cacheFile) {\n        if (_this.lastRNBFTask) {\n          _this.lastRNBFTask.cancel(function (err) {});\n          _this.lastRNBFTask = null;\n        }\n        var tempCacheFile = cacheFile + '.tmp';\n        _this._unlinkFile(tempCacheFile);\n        _this.lastRNBFTask = ReactNativeBlobUtil.config({\n          path: tempCacheFile,\n          trusty: _this.props.trustAllCerts\n        }).fetch(source.method ? source.method : 'GET', source.uri, source.headers ? source.headers : {}, source.body ? source.body : \"\").progress(function (received, total) {\n          _this.props.onLoadProgress && _this.props.onLoadProgress(received / total);\n          if (_this._mounted) {\n            _this.setState({\n              progress: received / total\n            });\n          }\n        });\n        _this.lastRNBFTask.then(function () {\n          var _ref5 = _asyncToGenerator(function* (res) {\n            _this.lastRNBFTask = null;\n            if (res && res.respInfo && res.respInfo.headers && !res.respInfo.headers[\"Content-Encoding\"] && !res.respInfo.headers[\"Transfer-Encoding\"] && res.respInfo.headers[\"Content-Length\"]) {\n              var expectedContentLength = res.respInfo.headers[\"Content-Length\"];\n              var actualContentLength;\n              try {\n                var fileStats = yield ReactNativeBlobUtil.fs.stat(res.path());\n                if (!fileStats || !fileStats.size) {\n                  throw new Error(\"FileNotFound:\" + source.uri);\n                }\n                actualContentLength = fileStats.size;\n              } catch (error) {\n                throw new Error(\"DownloadFailed:\" + source.uri);\n              }\n              if (expectedContentLength != actualContentLength) {\n                throw new Error(\"DownloadFailed:\" + source.uri);\n              }\n            }\n            _this._unlinkFile(cacheFile);\n            ReactNativeBlobUtil.fs.cp(tempCacheFile, cacheFile).then(function () {\n              if (_this._mounted) {\n                _this.setState({\n                  path: cacheFile,\n                  isDownloaded: true,\n                  progress: 1\n                });\n              }\n              _this._unlinkFile(tempCacheFile);\n            }).catch(function () {\n              var _ref6 = _asyncToGenerator(function* (error) {\n                throw error;\n              });\n              return function (_x7) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n          });\n          return function (_x6) {\n            return _ref5.apply(this, arguments);\n          };\n        }()).catch(function () {\n          var _ref7 = _asyncToGenerator(function* (error) {\n            _this._unlinkFile(tempCacheFile);\n            _this._unlinkFile(cacheFile);\n            _this._onError(error);\n          });\n          return function (_x8) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n      });\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    _this._unlinkFile = function () {\n      var _ref8 = _asyncToGenerator(function* (file) {\n        try {\n          yield ReactNativeBlobUtil.fs.unlink(file);\n        } catch (e) {}\n      });\n      return function (_x9) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    _this.setNativeProps = function (nativeProps) {\n      if (_this._root) {\n        _this._root.setNativeProps(nativeProps);\n      }\n    };\n    _this._onChange = function (event) {\n      var message = event.nativeEvent.message.split('|');\n      if (message.length > 0) {\n        if (message.length > 5) {\n          message[4] = message.splice(4).join('|');\n        }\n        if (message[0] === 'loadComplete') {\n          _this.props.onLoadComplete && _this.props.onLoadComplete(Number(message[1]), _this.state.path, {\n            width: Number(message[2]),\n            height: Number(message[3])\n          }, message[4] && JSON.parse(message[4]));\n        } else if (message[0] === 'pageChanged') {\n          _this.props.onPageChanged && _this.props.onPageChanged(Number(message[1]), Number(message[2]));\n        } else if (message[0] === 'error') {\n          _this._onError(new Error(message[1]));\n        } else if (message[0] === 'pageSingleTap') {\n          _this.props.onPageSingleTap && _this.props.onPageSingleTap(Number(message[1]), Number(message[2]), Number(message[3]));\n        } else if (message[0] === 'scaleChanged') {\n          _this.props.onScaleChanged && _this.props.onScaleChanged(Number(message[1]));\n        } else if (message[0] === 'linkPressed') {\n          _this.props.onPressLink && _this.props.onPressLink(message[1]);\n        }\n      }\n    };\n    _this._onError = function (error) {\n      _this.props.onError && _this.props.onError(error);\n    };\n    _this.state = {\n      path: '',\n      isDownloaded: false,\n      progress: 0,\n      isSupportPDFKit: -1\n    };\n    _this.lastRNBFTask = null;\n    return _this;\n  }\n  _createClass(Pdf, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      var nextSource = Image.resolveAssetSource(this.props.source);\n      var curSource = Image.resolveAssetSource(prevProps.source);\n      if (nextSource.uri !== curSource.uri) {\n        if (this.lastRNBFTask) {\n          this.lastRNBFTask.cancel(function (err) {\n            _this2._loadFromSource(_this2.props.source);\n          });\n          this.lastRNBFTask = null;\n        } else {\n          this._loadFromSource(this.props.source);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n      this._mounted = true;\n      if (Platform.OS === \"ios\") {\n        var PdfViewManagerNative = require('react-native').NativeModules.PdfViewManager;\n        PdfViewManagerNative.supportPDFKit(function (isSupportPDFKit) {\n          if (_this3._mounted) {\n            _this3.setState({\n              isSupportPDFKit: isSupportPDFKit ? 1 : 0\n            });\n          }\n        });\n      }\n      this._loadFromSource(this.props.source);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n      if (this.lastRNBFTask) {\n        this.lastRNBFTask.cancel(function (err) {});\n        this.lastRNBFTask = null;\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(pageNumber) {\n      if (pageNumber === null || isNaN(pageNumber)) {\n        throw new Error('Specified pageNumber is not a number');\n      }\n      this.setNativeProps({\n        page: pageNumber\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      if (Platform.OS === \"android\" || Platform.OS === \"ios\" || Platform.OS === \"windows\") {\n        return _jsx(View, {\n          style: [this.props.style, {\n            overflow: 'hidden'\n          }],\n          children: !this.state.isDownloaded ? _jsx(View, {\n            style: styles.progressContainer,\n            children: this.props.renderActivityIndicator ? this.props.renderActivityIndicator(this.state.progress) : _jsx(Text, {\n              children: (this.state.progress * 100).toFixed(2) + \"%\"\n            })\n          }) : Platform.OS === \"android\" || Platform.OS === \"windows\" ? _jsx(PdfCustom, _objectSpread(_objectSpread({\n            ref: function ref(component) {\n              return _this4._root = component;\n            }\n          }, this.props), {}, {\n            style: [{\n              flex: 1,\n              backgroundColor: '#EEE'\n            }, this.props.style],\n            path: this.state.path,\n            onChange: this._onChange\n          })) : this.props.usePDFKit && this.state.isSupportPDFKit === 1 ? _jsx(PdfCustom, _objectSpread(_objectSpread({\n            ref: function ref(component) {\n              return _this4._root = component;\n            }\n          }, this.props), {}, {\n            style: [{\n              backgroundColor: '#EEE',\n              overflow: 'hidden'\n            }, this.props.style],\n            path: this.state.path,\n            onChange: this._onChange\n          })) : _jsx(PdfView, _objectSpread(_objectSpread({}, this.props), {}, {\n            style: [{\n              backgroundColor: '#EEE',\n              overflow: 'hidden'\n            }, this.props.style],\n            path: this.state.path,\n            onLoadComplete: this.props.onLoadComplete,\n            onPageChanged: this.props.onPageChanged,\n            onError: this._onError,\n            onPageSingleTap: this.props.onPageSingleTap,\n            onScaleChanged: this.props.onScaleChanged,\n            onPressLink: this.props.onPressLink\n          }))\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n  return Pdf;\n}(Component);\nPdf.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string,\n    cache: PropTypes.bool,\n    cacheFileName: PropTypes.string,\n    expiration: PropTypes.number\n  }), PropTypes.number]).isRequired,\n  page: PropTypes.number,\n  scale: PropTypes.number,\n  minScale: PropTypes.number,\n  maxScale: PropTypes.number,\n  horizontal: PropTypes.bool,\n  spacing: PropTypes.number,\n  password: PropTypes.string,\n  renderActivityIndicator: PropTypes.func,\n  enableAntialiasing: PropTypes.bool,\n  enableAnnotationRendering: PropTypes.bool,\n  enablePaging: PropTypes.bool,\n  enableRTL: PropTypes.bool,\n  fitPolicy: PropTypes.number,\n  trustAllCerts: PropTypes.bool,\n  singlePage: PropTypes.bool,\n  onLoadComplete: PropTypes.func,\n  onPageChanged: PropTypes.func,\n  onError: PropTypes.func,\n  onPageSingleTap: PropTypes.func,\n  onScaleChanged: PropTypes.func,\n  onPressLink: PropTypes.func,\n  accessibilityLabel: PropTypes.string,\n  importantForAccessibility: PropTypes.string,\n  renderToHardwareTextureAndroid: PropTypes.string,\n  testID: PropTypes.string,\n  onLayout: PropTypes.bool,\n  accessibilityLiveRegion: PropTypes.string,\n  accessibilityComponentType: PropTypes.string\n});\nPdf.defaultProps = {\n  password: \"\",\n  scale: 1,\n  minScale: 1,\n  maxScale: 3,\n  spacing: 10,\n  fitPolicy: 2,\n  horizontal: false,\n  page: 1,\n  enableAntialiasing: true,\n  enableAnnotationRendering: true,\n  enablePaging: false,\n  enableRTL: false,\n  trustAllCerts: true,\n  usePDFKit: true,\n  singlePage: false,\n  onLoadProgress: function onLoadProgress(percent) {},\n  onLoadComplete: function onLoadComplete(numberOfPages, path) {},\n  onPageChanged: function onPageChanged(page, numberOfPages) {},\n  onError: function onError(error) {},\n  onPageSingleTap: function onPageSingleTap(page, x, y) {},\n  onScaleChanged: function onScaleChanged(scale) {},\n  onPressLink: function onPressLink(url) {}\n};\nexport { Pdf as default };\nif (Platform.OS === \"android\") {\n  var PdfCustom = requireNativeComponent('RCTPdf', Pdf, {\n    nativeOnly: {\n      path: true,\n      onChange: true\n    }\n  });\n} else if (Platform.OS === \"ios\") {\n  var PdfCustom = requireNativeComponent('RCTPdfView', Pdf, {\n    nativeOnly: {\n      path: true,\n      onChange: true\n    }\n  });\n} else if (Platform.OS === \"windows\") {\n  var PdfCustom = requireNativeComponent('RCTPdf', Pdf, {\n    nativeOnly: {\n      path: true,\n      onChange: true\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  progressContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  progressBar: {\n    width: 200,\n    height: 2\n  }\n});","map":{"version":3,"names":["_defineProperty","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Component","PropTypes","requireNativeComponent","View","Platform","StyleSheet","Image","Text","ReactNativeBlobUtil","ViewPropTypes","SHA1","require","PdfView","jsx","_jsx","Pdf","_Component","_super","props","_this","_loadFromSource","newSource","resolveAssetSource","uri","_mounted","setState","isDownloaded","path","progress","filename","cacheFileName","cacheFile","fs","dirs","CacheDir","cache","stat","then","stats","expiration","lastModified","Date","getTime","_prepareFile","catch","_ref","isNetwork","match","isAsset","isBase64","_unlinkFile","_downloadFile","cp","_ref2","error","_onError","_x2","data","replace","writeFile","_ref3","_x3","Error","_x","_ref4","lastRNBFTask","cancel","err","tempCacheFile","config","trusty","trustAllCerts","fetch","method","headers","body","received","total","onLoadProgress","_ref5","res","respInfo","expectedContentLength","actualContentLength","fileStats","size","_ref6","_x7","_x6","_ref7","_x8","_x4","_x5","_ref8","file","unlink","_x9","setNativeProps","nativeProps","_root","_onChange","event","message","nativeEvent","split","splice","join","onLoadComplete","Number","state","width","height","JSON","parse","onPageChanged","onPageSingleTap","onScaleChanged","onPressLink","onError","isSupportPDFKit","value","componentDidUpdate","prevProps","_this2","nextSource","curSource","componentDidMount","_this3","OS","PdfViewManagerNative","NativeModules","PdfViewManager","supportPDFKit","componentWillUnmount","setPage","pageNumber","isNaN","page","render","_this4","style","overflow","children","styles","progressContainer","renderActivityIndicator","toFixed","PdfCustom","ref","component","flex","backgroundColor","onChange","usePDFKit","propTypes","oneOfType","shape","string","bool","number","isRequired","scale","minScale","maxScale","horizontal","spacing","password","func","enableAntialiasing","enableAnnotationRendering","enablePaging","enableRTL","fitPolicy","singlePage","accessibilityLabel","importantForAccessibility","renderToHardwareTextureAndroid","testID","onLayout","accessibilityLiveRegion","accessibilityComponentType","defaultProps","percent","numberOfPages","x","y","url","default","nativeOnly","create","justifyContent","alignItems","progressBar"],"sources":["D:/NewCodeWorkspace/MyManga/SpanishManga2/spanishmanga2/node_modules/react-native-pdf/index.js"],"sourcesContent":["/**\n * Copyright (c) 2017-present, Wonday (@wonday.org)\n * All rights reserved.\n *\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    requireNativeComponent,\n    View,\n    Platform,\n    StyleSheet,\n    Image,\n    Text\n} from 'react-native';\n\nimport ReactNativeBlobUtil from 'react-native-blob-util'\nimport {ViewPropTypes} from 'deprecated-react-native-prop-types';\nconst SHA1 = require('crypto-js/sha1');\nimport PdfView from './PdfView';\n\nexport default class Pdf extends Component {\n\n    static propTypes = {\n        ...ViewPropTypes,\n        source: PropTypes.oneOfType([\n            PropTypes.shape({\n                uri: PropTypes.string,\n                cache: PropTypes.bool,\n                cacheFileName: PropTypes.string,\n                expiration: PropTypes.number,\n            }),\n            // Opaque type returned by require('./test.pdf')\n            PropTypes.number,\n        ]).isRequired,\n        page: PropTypes.number,\n        scale: PropTypes.number,\n        minScale: PropTypes.number,\n        maxScale: PropTypes.number,\n        horizontal: PropTypes.bool,\n        spacing: PropTypes.number,\n        password: PropTypes.string,\n        renderActivityIndicator: PropTypes.func,\n        enableAntialiasing: PropTypes.bool,\n        enableAnnotationRendering: PropTypes.bool,\n        enablePaging: PropTypes.bool,\n        enableRTL: PropTypes.bool,\n        fitPolicy: PropTypes.number,\n        trustAllCerts: PropTypes.bool,\n        singlePage: PropTypes.bool,\n        onLoadComplete: PropTypes.func,\n        onPageChanged: PropTypes.func,\n        onError: PropTypes.func,\n        onPageSingleTap: PropTypes.func,\n        onScaleChanged: PropTypes.func,\n        onPressLink: PropTypes.func,\n\n        // Props that are not available in the earlier react native version, added to prevent crashed on android\n        accessibilityLabel: PropTypes.string,\n        importantForAccessibility: PropTypes.string,\n        renderToHardwareTextureAndroid: PropTypes.string,\n        testID: PropTypes.string,\n        onLayout: PropTypes.bool,\n        accessibilityLiveRegion: PropTypes.string,\n        accessibilityComponentType: PropTypes.string,\n    };\n\n    static defaultProps = {\n        password: \"\",\n        scale: 1,\n        minScale: 1,\n        maxScale: 3,\n        spacing: 10,\n        fitPolicy: 2, //fit both\n        horizontal: false,\n        page: 1,\n        enableAntialiasing: true,\n        enableAnnotationRendering: true,\n        enablePaging: false,\n        enableRTL: false,\n        trustAllCerts: true,\n        usePDFKit: true,\n        singlePage: false,\n        onLoadProgress: (percent) => {\n        },\n        onLoadComplete: (numberOfPages, path) => {\n        },\n        onPageChanged: (page, numberOfPages) => {\n        },\n        onError: (error) => {\n        },\n        onPageSingleTap: (page, x, y) => {\n        },\n        onScaleChanged: (scale) => {\n        },\n        onPressLink: (url) => {\n        },\n    };\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            path: '',\n            isDownloaded: false,\n            progress: 0,\n            isSupportPDFKit: -1\n        };\n\n        this.lastRNBFTask = null;\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n        const nextSource = Image.resolveAssetSource(this.props.source);\n        const curSource = Image.resolveAssetSource(prevProps.source);\n\n        if ((nextSource.uri !== curSource.uri)) {\n            // if has download task, then cancel it.\n            if (this.lastRNBFTask) {\n                this.lastRNBFTask.cancel(err => {\n                    this._loadFromSource(this.props.source);\n                });\n                this.lastRNBFTask = null;\n            } else {\n                this._loadFromSource(this.props.source);\n            }\n        }\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n        if (Platform.OS === \"ios\") {\n            const PdfViewManagerNative = require('react-native').NativeModules.PdfViewManager;\n            PdfViewManagerNative.supportPDFKit((isSupportPDFKit) => {\n                if (this._mounted) {\n                    this.setState({isSupportPDFKit: isSupportPDFKit ? 1 : 0});\n                }\n            });\n        }\n        this._loadFromSource(this.props.source);\n    }\n\n    componentWillUnmount() {\n        this._mounted = false;\n        if (this.lastRNBFTask) {\n            this.lastRNBFTask.cancel(err => {\n            });\n            this.lastRNBFTask = null;\n        }\n\n    }\n\n    _loadFromSource = (newSource) => {\n\n        const source = Image.resolveAssetSource(newSource) || {};\n\n        let uri = source.uri || '';\n        // first set to initial state\n        if (this._mounted) {\n            this.setState({isDownloaded: false, path: '', progress: 0});\n        }\n        const filename = source.cacheFileName || SHA1(uri) + '.pdf';\n        const cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n\n        if (source.cache) {\n            ReactNativeBlobUtil.fs\n                .stat(cacheFile)\n                .then(stats => {\n                    if (!Boolean(source.expiration) || (source.expiration * 1000 + stats.lastModified) > (new Date().getTime())) {\n                        if (this._mounted) {\n                            this.setState({path: cacheFile, isDownloaded: true});\n                        }\n                    } else {\n                        // cache expirated then reload it\n                        this._prepareFile(source);\n                    }\n                })\n                .catch(() => {\n                    this._prepareFile(source);\n                })\n\n        } else {\n            this._prepareFile(source);\n        }\n    };\n\n    _prepareFile = async (source) => {\n\n        try {\n            if (source.uri) {\n                let uri = source.uri || '';\n\n                const isNetwork = !!(uri && uri.match(/^https?:\\/\\//));\n                const isAsset = !!(uri && uri.match(/^bundle-assets:\\/\\//));\n                const isBase64 = !!(uri && uri.match(/^data:application\\/pdf;base64/));\n\n                const filename = source.cacheFileName || SHA1(uri) + '.pdf';\n                const cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n\n                // delete old cache file\n                this._unlinkFile(cacheFile);\n\n                if (isNetwork) {\n                    this._downloadFile(source, cacheFile);\n                } else if (isAsset) {\n                    ReactNativeBlobUtil.fs\n                        .cp(uri, cacheFile)\n                        .then(() => {\n                            if (this._mounted) {\n                                this.setState({path: cacheFile, isDownloaded: true, progress: 1});\n                            }\n                        })\n                        .catch(async (error) => {\n                            this._unlinkFile(cacheFile);\n                            this._onError(error);\n                        })\n                } else if (isBase64) {\n                    let data = uri.replace(/data:application\\/pdf;base64,/i, '');\n                    ReactNativeBlobUtil.fs\n                        .writeFile(cacheFile, data, 'base64')\n                        .then(() => {\n                            if (this._mounted) {\n                                this.setState({path: cacheFile, isDownloaded: true, progress: 1});\n                            }\n                        })\n                        .catch(async (error) => {\n                            this._unlinkFile(cacheFile);\n                            this._onError(error)\n                        });\n                } else {\n                    if (this._mounted) {\n                       this.setState({\n                            path: uri.replace(/file:\\/\\//i, ''),\n                            isDownloaded: true,\n                        });\n                    }\n                }\n            } else {\n                this._onError(new Error('no pdf source!'));\n            }\n        } catch (e) {\n            this._onError(e)\n        }\n\n\n    };\n\n    _downloadFile = async (source, cacheFile) => {\n\n        if (this.lastRNBFTask) {\n            this.lastRNBFTask.cancel(err => {\n            });\n            this.lastRNBFTask = null;\n        }\n\n        const tempCacheFile = cacheFile + '.tmp';\n        this._unlinkFile(tempCacheFile);\n\n        this.lastRNBFTask = ReactNativeBlobUtil.config({\n            // response data will be saved to this path if it has access right.\n            path: tempCacheFile,\n            trusty: this.props.trustAllCerts,\n        })\n            .fetch(\n                source.method ? source.method : 'GET',\n                source.uri,\n                source.headers ? source.headers : {},\n                source.body ? source.body : \"\"\n            )\n            // listen to download progress event\n            .progress((received, total) => {\n                this.props.onLoadProgress && this.props.onLoadProgress(received / total);\n                if (this._mounted) {\n                    this.setState({progress: received / total});\n                }\n            });\n\n        this.lastRNBFTask\n            .then(async (res) => {\n\n                this.lastRNBFTask = null;\n\n                if (res && res.respInfo && res.respInfo.headers && !res.respInfo.headers[\"Content-Encoding\"] && !res.respInfo.headers[\"Transfer-Encoding\"] && res.respInfo.headers[\"Content-Length\"]) {\n                    const expectedContentLength = res.respInfo.headers[\"Content-Length\"];\n                    let actualContentLength;\n\n                    try {\n                        const fileStats = await ReactNativeBlobUtil.fs.stat(res.path());\n\n                        if (!fileStats || !fileStats.size) {\n                            throw new Error(\"FileNotFound:\" + source.uri);\n                        }\n\n                        actualContentLength = fileStats.size;\n                    } catch (error) {\n                        throw new Error(\"DownloadFailed:\" + source.uri);\n                    }\n\n                    if (expectedContentLength != actualContentLength) {\n                        throw new Error(\"DownloadFailed:\" + source.uri);\n                    }\n                }\n\n                this._unlinkFile(cacheFile);\n                ReactNativeBlobUtil.fs\n                    .cp(tempCacheFile, cacheFile)\n                    .then(() => {\n                        if (this._mounted) {\n                            this.setState({path: cacheFile, isDownloaded: true, progress: 1});\n                        }\n                        this._unlinkFile(tempCacheFile);\n                    })\n                    .catch(async (error) => {\n                        throw error;\n                    });\n            })\n            .catch(async (error) => {\n                this._unlinkFile(tempCacheFile);\n                this._unlinkFile(cacheFile);\n                this._onError(error);\n            });\n\n    };\n\n    _unlinkFile = async (file) => {\n        try {\n            await ReactNativeBlobUtil.fs.unlink(file);\n        } catch (e) {\n\n        }\n    }\n\n    setNativeProps = nativeProps => {\n        if (this._root){\n            this._root.setNativeProps(nativeProps);\n        }\n    };\n\n    setPage( pageNumber ) {\n        if ( (pageNumber === null) || (isNaN(pageNumber)) ) {\n            throw new Error('Specified pageNumber is not a number');\n        }\n        this.setNativeProps({\n            page: pageNumber\n        });\n    }\n\n    _onChange = (event) => {\n\n        let message = event.nativeEvent.message.split('|');\n        //__DEV__ && console.log(\"onChange: \" + message);\n        if (message.length > 0) {\n            if (message.length > 5) {\n                message[4] = message.splice(4).join('|');\n            }\n            if (message[0] === 'loadComplete') {\n                this.props.onLoadComplete && this.props.onLoadComplete(Number(message[1]), this.state.path, {\n                    width: Number(message[2]),\n                    height: Number(message[3]),\n                },\n                message[4]&&JSON.parse(message[4]));\n            } else if (message[0] === 'pageChanged') {\n                this.props.onPageChanged && this.props.onPageChanged(Number(message[1]), Number(message[2]));\n            } else if (message[0] === 'error') {\n                this._onError(new Error(message[1]));\n            } else if (message[0] === 'pageSingleTap') {\n                this.props.onPageSingleTap && this.props.onPageSingleTap(Number(message[1]), Number(message[2]), Number(message[3]));\n            } else if (message[0] === 'scaleChanged') {\n                this.props.onScaleChanged && this.props.onScaleChanged(Number(message[1]));\n            } else if (message[0] === 'linkPressed') {\n                this.props.onPressLink && this.props.onPressLink(message[1]);\n            }\n        }\n\n    };\n\n    _onError = (error) => {\n\n        this.props.onError && this.props.onError(error);\n\n    };\n\n    render() {\n        if (Platform.OS === \"android\" || Platform.OS === \"ios\" || Platform.OS === \"windows\") {\n                return (\n                    <View style={[this.props.style,{overflow: 'hidden'}]}>\n                        {!this.state.isDownloaded?\n                            (<View\n                                style={styles.progressContainer}\n                            >\n                                {this.props.renderActivityIndicator\n                                    ? this.props.renderActivityIndicator(this.state.progress)\n                                    : <Text>{`${(this.state.progress * 100).toFixed(2)}%`}</Text>}\n                            </View>):(\n                                Platform.OS === \"android\" || Platform.OS === \"windows\"?(\n                                        <PdfCustom\n                                            ref={component => (this._root = component)}\n                                            {...this.props}\n                                            style={[{flex:1,backgroundColor: '#EEE'}, this.props.style]}\n                                            path={this.state.path}\n                                            onChange={this._onChange}\n                                        />\n                                    ):(\n                                        this.props.usePDFKit && this.state.isSupportPDFKit === 1?(\n                                                <PdfCustom\n                                                    ref={component => (this._root = component)}\n                                                    {...this.props}\n                                                    style={[{backgroundColor: '#EEE',overflow: 'hidden'}, this.props.style]}\n                                                    path={this.state.path}\n                                                    onChange={this._onChange}\n                                                />\n                                            ):(<PdfView\n                                                {...this.props}\n                                                style={[{backgroundColor: '#EEE',overflow: 'hidden'}, this.props.style]}\n                                                path={this.state.path}\n                                                onLoadComplete={this.props.onLoadComplete}\n                                                onPageChanged={this.props.onPageChanged}\n                                                onError={this._onError}\n                                                onPageSingleTap={this.props.onPageSingleTap}\n                                                onScaleChanged={this.props.onScaleChanged}\n                                                onPressLink={this.props.onPressLink}\n                                            />)\n                                    )\n                                )}\n                    </View>);\n        } else {\n            return (null);\n        }\n\n\n    }\n}\n\n\nif (Platform.OS === \"android\") {\n    var PdfCustom = requireNativeComponent('RCTPdf', Pdf, {\n        nativeOnly: {path: true, onChange: true},\n    })\n} else if (Platform.OS === \"ios\") {\n    var PdfCustom = requireNativeComponent('RCTPdfView', Pdf, {\n        nativeOnly: {path: true, onChange: true},\n    })\n} else if (Platform.OS === \"windows\") {\n    var PdfCustom = requireNativeComponent('RCTPdf', Pdf, {\n        nativeOnly: {path: true, onChange: true},\n    })\n}\n\n\nconst styles = StyleSheet.create({\n    progressContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    progressBar: {\n        width: 200,\n        height: 2\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}