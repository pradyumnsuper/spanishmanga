{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport 'expo-dev-client';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { BookDetail } from \"./screens/\";\nimport Tabs from \"./navigation/tabs\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    border: \"transparent\"\n  })\n});\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  var _useFonts = useFonts({\n      \"Roboto-Black\": require(\"./assets/fonts/Roboto-Black.ttf\"),\n      \"Roboto-Bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\n      \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: 'Home',\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Tabs\n      }), _jsx(Stack.Screen, {\n        name: \"BookDetail\",\n        component: BookDetail,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","React","NavigationContainer","DefaultTheme","createNativeStackNavigator","BookDetail","Tabs","useFonts","jsx","_jsx","jsxs","_jsxs","theme","_objectSpread","colors","border","Stack","App","_useFonts","require","_useFonts2","_slicedToArray","loaded","children","Navigator","screenOptions","headerShown","initialRouteName","Screen","name","component","options"],"sources":["D:/NewCodeWorkspace/MyManga/SpanishManga2/spanishmanga2/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport 'expo-dev-client';\nimport 'react-native-gesture-handler';\nimport React from 'react';\n//import { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport { BookDetail } from \"./screens/\";\nimport Tabs from \"./navigation/tabs\";\nimport { useFonts } from 'expo-font';\n\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n      ...DefaultTheme.colors,\n      border: \"transparent\"\n  }\n}\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  const [loaded] = useFonts({\n          \"Roboto-Black\" : require('./assets/fonts/Roboto-Black.ttf'),\n          \"Roboto-Bold\" : require('./assets/fonts/Roboto-Bold.ttf'),\n          \"Roboto-Regular\" : require('./assets/fonts/Roboto-Regular.ttf'),\n      })\n\n  if(!loaded){\n      return null;\n  }\n  return (\n      <NavigationContainer theme={theme}>\n          <Stack.Navigator\n              screenOptions={{\n                  headerShown: false\n              }}\n              initialRouteName={'Home'}\n          >\n              {/* Tabs */}\n              <Stack.Screen name=\"Home\" component={Tabs} />\n\n              {/* Screens */}\n              <Stack.Screen name=\"BookDetail\" component={BookDetail} options={{ headerShown: false }} />\n          </Stack.Navigator>\n      </NavigationContainer>\n  )\n}\n\nexport default App;"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,OAAO,iBAAiB;AACxB,OAAO,8BAA8B;AACrC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,0BAA0B;AAC5E,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,SAASC,UAAU;AACnB,OAAOC,IAAI;AACX,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KACNV,YAAY;EACfW,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACCV,YAAY,CAACW,MAAM;IACtBC,MAAM,EAAE;EAAa;AACxB,EACF;AAED,IAAMC,KAAK,GAAGZ,0BAA0B,CAAC,CAAC;AAE1C,IAAMa,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAiBX,QAAQ,CAAC;MAClB,cAAc,EAAGY,OAAO,kCAAkC,CAAC;MAC3D,aAAa,EAAGA,OAAO,iCAAiC,CAAC;MACzD,gBAAgB,EAAGA,OAAO,oCAAoC;IAClE,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAJCI,MAAM,GAAAF,UAAA;EAMb,IAAG,CAACE,MAAM,EAAC;IACP,OAAO,IAAI;EACf;EACA,OACIb,IAAA,CAACP,mBAAmB;IAACU,KAAK,EAAEA,KAAM;IAAAW,QAAA,EAC9BZ,KAAA,CAACK,KAAK,CAACQ,SAAS;MACZC,aAAa,EAAE;QACXC,WAAW,EAAE;MACjB,CAAE;MACFC,gBAAgB,EAAE,MAAO;MAAAJ,QAAA,GAGzBd,IAAA,CAACO,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAExB;MAAK,CAAE,CAAC,EAG7CG,IAAA,CAACO,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAEzB,UAAW;QAAC0B,OAAO,EAAE;UAAEL,WAAW,EAAE;QAAM;MAAE,CAAE,CAAC;IAAA,CAC7E;EAAC,CACD,CAAC;AAE5B,CAAC;AAED,eAAeT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}