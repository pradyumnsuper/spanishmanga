{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n    onPress = _ref.onPress;\n  return _jsx(TouchableOpacity, {\n    style: styles.button,\n    onPress: onPress,\n    children: _jsx(Text, {\n      style: styles.buttonText,\n      children: title\n    })\n  });\n};\nexport default function Buttons() {\n  var itemsPerPage = 30;\n  var totalItems = 1000;\n  var totalPages = Math.ceil(totalItems / itemsPerPage);\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPage = _useState2[0],\n    setCurrentPage = _useState2[1];\n  var buttons = Array.from({\n    length: totalItems\n  }, function (_, index) {\n    return {\n      title: \"Button \" + (index + 1),\n      onPress: function onPress() {\n        return console.log(\"Button \" + (index + 1) + \" pressed\");\n      }\n    };\n  });\n  var handlePrevPage = function handlePrevPage() {\n    setCurrentPage(function (prevPage) {\n      return prevPage - 1;\n    });\n  };\n  var handleNextPage = function handleNextPage() {\n    setCurrentPage(function (prevPage) {\n      return prevPage + 1;\n    });\n  };\n  var startIndex = (currentPage - 1) * itemsPerPage;\n  var endIndex = startIndex + itemsPerPage;\n  var visibleButtons = buttons.slice(startIndex, endIndex);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.pagination,\n      children: [_jsx(Button, {\n        title: \"Prev\",\n        onPress: handlePrevPage,\n        disabled: currentPage === 1\n      }), _jsx(Text, {\n        style: styles.pageCount,\n        children: \"Page \" + currentPage + \" of \" + totalPages\n      }), _jsx(Button, {\n        title: \"Next\",\n        onPress: handleNextPage,\n        disabled: currentPage === totalPages\n      })]\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollView,\n      children: _jsx(View, {\n        style: styles.grid,\n        children: visibleButtons.map(function (button, index) {\n          return _jsx(Button, {\n            title: button.title,\n            onPress: button.onPress\n          }, index);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  grid: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    margin: 5,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  pagination: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  pageCount: {\n    marginHorizontal: 10,\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TouchableOpacity","ScrollView","jsx","_jsx","jsxs","_jsxs","Button","_ref","title","onPress","style","styles","button","children","buttonText","Buttons","itemsPerPage","totalItems","totalPages","Math","ceil","_useState","_useState2","_slicedToArray","currentPage","setCurrentPage","buttons","Array","from","length","_","index","console","log","handlePrevPage","prevPage","handleNextPage","startIndex","endIndex","visibleButtons","slice","container","pagination","disabled","pageCount","contentContainerStyle","scrollView","grid","map","create","flex","flexGrow","justifyContent","alignItems","flexDirection","flexWrap","backgroundColor","padding","margin","borderRadius","color","fontWeight","marginBottom","marginHorizontal","fontSize"],"sources":["D:/NewCodeWorkspace/MyManga/SpanishManga2/spanishmanga2/screens/Buttons.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nconst Button = ({ title, onPress }) => {\r\n  return (\r\n    <TouchableOpacity style={styles.button} onPress={onPress}>\r\n      <Text style={styles.buttonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default function Buttons() {\r\n  const itemsPerPage = 30;\r\n  const totalItems = 1000;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const buttons = Array.from({ length: totalItems }, (_, index) => ({\r\n    title: `Button ${index + 1}`,\r\n    onPress: () => console.log(`Button ${index + 1} pressed`),\r\n  }));\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage((prevPage) => prevPage - 1);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const visibleButtons = buttons.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.pagination}>\r\n        <Button title=\"Prev\" onPress={handlePrevPage} disabled={currentPage === 1} />\r\n        <Text style={styles.pageCount}>{`Page ${currentPage} of ${totalPages}`}</Text>\r\n        <Button\r\n          title=\"Next\"\r\n          onPress={handleNextPage}\r\n          disabled={currentPage === totalPages}\r\n        />\r\n      </View>\r\n      <ScrollView contentContainerStyle={styles.scrollView}>\r\n        <View style={styles.grid}>\r\n          {visibleButtons.map((button, index) => (\r\n            <Button key={index} title={button.title} onPress={button.onPress} />\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  scrollView: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  grid: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    margin: 5,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  pagination: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  pageCount: {\r\n    marginHorizontal: 10,\r\n    fontSize: 18,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}