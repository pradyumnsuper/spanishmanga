{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pdf from 'react-native-pdf';\nimport { printToFileAsync } from 'expo-print';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Pdfs() {\n  var onlineSource = {\n    uri: \"http://samples.leanpub.com/thereactnativebook-sample.pdf\",\n    cache: true\n  };\n  var _useState = useState(onlineSource),\n    _useState2 = _slicedToArray(_useState, 2),\n    pdfSource = _useState2[0],\n    setPdfSource = _useState2[1];\n  var pdfRef = useRef();\n  var generatePdf = function () {\n    var _ref = _asyncToGenerator(function* (generateBase64) {\n      var html = \"\\n      <html>\\n        <body style=\\\"margin:32px;\\\">\\n          <h1>Hi YouTube</h1>\\n          <h2>Base64: \" + generateBase64.toString() + \"</h2>\\n        </body>\\n      </html>\\n    \";\n      var fileGenerated = yield printToFileAsync({\n        html: html,\n        base64: generateBase64\n      });\n      console.log(fileGenerated.base64);\n      console.log(fileGenerated.uri);\n      var newSource = {\n        uri: generateBase64 ? \"data:application/pdf;base64,\" + fileGenerated.base64 : fileGenerated.uri,\n        cache: true\n      };\n      setPdfSource(newSource);\n    });\n    return function generatePdf(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Show Online PDF\",\n      onPress: function onPress() {\n        return setPdfSource(onlineSource);\n      }\n    }), _jsx(Pdf, {\n      trustAllCerts: false,\n      ref: pdfRef,\n      source: pdfSource,\n      horizontal: true,\n      onLoadComplete: function onLoadComplete(numberOfPages, filePath) {\n        console.log(\"Number of pages: \" + numberOfPages);\n      },\n      onPageChanged: function onPageChanged(page, numberOfPages) {\n        console.log(\"Current page: \" + page);\n      },\n      onError: function onError(error) {\n        console.log(error);\n      },\n      onPressLink: function onPressLink(uri) {\n        console.log(\"Link pressed: \" + uri);\n      },\n      style: styles.pdf\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 20\n  },\n  pdf: {\n    flex: 1,\n    alignSelf: \"stretch\"\n  }\n});","map":{"version":3,"names":["StatusBar","useRef","useState","StyleSheet","SafeAreaView","Button","Pdf","printToFileAsync","jsx","_jsx","jsxs","_jsxs","Pdfs","onlineSource","uri","cache","_useState","_useState2","_slicedToArray","pdfSource","setPdfSource","pdfRef","generatePdf","_ref","_asyncToGenerator","generateBase64","html","toString","fileGenerated","base64","console","log","newSource","_x","apply","arguments","style","styles","container","children","title","onPress","trustAllCerts","ref","source","horizontal","onLoadComplete","numberOfPages","filePath","onPageChanged","page","onError","error","onPressLink","pdf","create","flex","backgroundColor","alignItems","justifyContent","margin","alignSelf"],"sources":["D:/NewCodeWorkspace/MyManga/SpanishManga2/spanishmanga2/screens/Pdfs.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useRef, useState } from 'react';\r\nimport { StyleSheet, SafeAreaView, Button } from 'react-native';\r\nimport Pdf from 'react-native-pdf';\r\nimport { printToFileAsync } from 'expo-print';\r\n\r\n// npx expo install react-native-pdf react-native-blob-util fbjs @config-plugins/react-native-pdf @config-plugins/react-native-blob-util\r\n\r\n/*\r\nConfigure build profiles: \r\neas build:configure\r\n\r\nInstall expo dev client:\r\nnpx expo install expo-dev-client\r\n\r\nBuild standalone app for dev profile:\r\neas build -p ios --profile development\r\nOR\r\neas build -p android --profile development\r\n\r\nInstall standalone app:\r\nFor iOS (simulator): https://docs.expo.dev/build-reference/simulators/\r\nFor Android: https://docs.expo.dev/build-reference/apk/\r\n\r\nRun standalone app:\r\nexpo start --dev-client\r\n*/\r\n\r\nexport default function Pdfs() {\r\n  const onlineSource = { uri: \"http://samples.leanpub.com/thereactnativebook-sample.pdf\", cache: true };\r\n  const [pdfSource, setPdfSource] = useState(onlineSource);\r\n  const pdfRef = useRef();\r\n\r\n  const generatePdf = async (generateBase64) => {\r\n    const html = `\r\n      <html>\r\n        <body style=\"margin:32px;\">\r\n          <h1>Hi YouTube</h1>\r\n          <h2>Base64: ${generateBase64.toString()}</h2>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    const fileGenerated = await printToFileAsync({\r\n      html: html,\r\n      base64: generateBase64\r\n    });\r\n\r\n    console.log(fileGenerated.base64);\r\n    console.log(fileGenerated.uri);\r\n\r\n    const newSource = {\r\n      uri: generateBase64 ? `data:application/pdf;base64,${fileGenerated.base64}` : fileGenerated.uri,\r\n      cache: true\r\n    };\r\n    setPdfSource(newSource);\r\n  }\r\n\r\n  //<Button title=\"Generate and Show\" onPress={() => generatePdf(false)} />\r\n  //<Button title=\"Generate and Show Base64\" onPress={() => generatePdf(true)} />\r\n // <Button title=\"Show Base64 PDF\" onPress={() => setPdfSource({ uri: `data:application/pdf;base64,${MyPdf}`, cache: true })} />\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Button title=\"Show Online PDF\" onPress={() => setPdfSource(onlineSource)} />\r\n     \r\n      <Pdf\r\n        trustAllCerts={false}\r\n        ref={pdfRef} \r\n        source={pdfSource}\r\n        horizontal\r\n        onLoadComplete={(numberOfPages, filePath) => {\r\n          console.log(`Number of pages: ${numberOfPages}`);\r\n        }}\r\n        onPageChanged={(page, numberOfPages) => {\r\n          console.log(`Current page: ${page}`);\r\n        }}\r\n        onError={(error) => {\r\n          console.log(error);\r\n        }}\r\n        onPressLink={(uri) => {\r\n          console.log(`Link pressed: ${uri}`);\r\n        }}\r\n        style={styles.pdf}\r\n      />\r\n      <StatusBar style=\"auto\" />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 20\r\n  },\r\n  pdf: {\r\n    flex: 1,\r\n    alignSelf: \"stretch\"\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}